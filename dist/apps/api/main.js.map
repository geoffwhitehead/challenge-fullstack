{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/api/src/app/app.controller.ts","webpack:///./apps/api/src/app/app.module.ts","webpack:///./apps/api/src/app/app.service.ts","webpack:///./apps/api/src/app/settings.entity.ts","webpack:///./apps/api/src/auth/auth.module.ts","webpack:///./apps/api/src/auth/auth.service.ts","webpack:///./apps/api/src/auth/jwt-auth.guard.ts","webpack:///./apps/api/src/auth/jwt.strategy.ts","webpack:///./apps/api/src/auth/local-auth.guard.ts","webpack:///./apps/api/src/auth/local.strategy.ts","webpack:///./apps/api/src/config/config.ts","webpack:///./apps/api/src/database/database.module.ts","webpack:///./apps/api/src/main.ts","webpack:///./apps/api/src/users/user.entity.ts","webpack:///./apps/api/src/users/users.controller.ts","webpack:///./apps/api/src/users/users.module.ts","webpack:///./apps/api/src/users/users.service.ts","webpack:///./libs/types/src/index.ts","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/config\"","webpack:///external \"@nestjs/core\"","webpack:///external \"@nestjs/jwt\"","webpack:///external \"@nestjs/passport\"","webpack:///external \"@nestjs/platform-express\"","webpack:///external \"@nestjs/serve-static\"","webpack:///external \"@nestjs/swagger\"","webpack:///external \"@nestjs/typeorm\"","webpack:///external \"lodash\"","webpack:///external \"multer\"","webpack:///external \"passport-jwt\"","webpack:///external \"passport-local\"","webpack:///external \"path\"","webpack:///external \"tslib\"","webpack:///external \"typeorm\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Request,\n  UseGuards,\n} from '@nestjs/common';\nimport { Settings } from '@org/types';\nimport { AuthService } from '../auth/auth.service';\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\nimport { LocalAuthGuard } from '../auth/local-auth.guard';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private authService: AuthService\n  ) {}\n\n  @Get('settings')\n  async getSettings() {\n    return this.appService.getSettings();\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Post('settings')\n  async postSettings(@Body() settings: Settings) {\n    return this.appService.updateSettings(settings);\n  }\n\n  @UseGuards(LocalAuthGuard)\n  @Post('auth/login')\n  async login(@Request() req) {\n    // If password validation through local strategy is successful the user details will be\n    // appended onto the request.\n    return this.authService.login(req.user);\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { join } from 'path';\nimport { AuthModule } from '../auth/auth.module';\nimport { config } from '../config/config';\nimport { DatabaseModule } from '../database/database.module';\nimport { UsersModule } from '../users/users.module';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { SettingsEntity } from './settings.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([SettingsEntity]),\n    UsersModule,\n    AuthModule,\n    DatabaseModule,\n    ConfigModule.forRoot({\n      load: [config],\n      isGlobal: true,\n    }),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'ui'),\n      exclude: ['/api*'],\n    }),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n","import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Settings } from '@org/types';\nimport { omit } from 'lodash';\nimport { Repository } from 'typeorm';\nimport { SettingsEntity } from './settings.entity';\n\n@Injectable()\nexport class AppService {\n  constructor(\n    @InjectRepository(SettingsEntity)\n    private settingsRepository: Repository<Settings>\n  ) {}\n\n  async getSettings(): Promise<Settings> {\n    const globalSettings = await this.settingsRepository.findOne();\n\n    if (!globalSettings) {\n      const newGlobalSettings = this.settingsRepository.create();\n      return omit(await this.settingsRepository.save(newGlobalSettings), 'id');\n    } else {\n      return omit(globalSettings, 'id');\n    }\n  }\n\n  async updateSettings(settings: Partial<Settings>): Promise<Settings> {\n    const globalSettings = await this.settingsRepository.findOne();\n\n    console.log(`globalRecord`, globalSettings);\n    console.log(`settings`, settings);\n\n    if (!globalSettings) {\n      const newGlobalSettings = this.settingsRepository.create({\n        ...settings,\n      });\n      return omit(await this.settingsRepository.save(newGlobalSettings), 'id');\n    } else {\n      // TODO: possible to combine update and return into single op?\n      await this.settingsRepository.update(\n        { id: globalSettings.id },\n        { ...globalSettings, ...settings }\n      );\n\n      const updated = await this.settingsRepository.findOne();\n\n      console.log(`updated`, updated);\n      return omit(updated, 'id');\n    }\n  }\n}\n","import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class SettingsEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @Column({ default: true })\n  isUsersGridActive: boolean;\n}\n","import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { config } from '../config/config';\nimport { UsersModule } from '../users/users.module';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './jwt.strategy';\nimport { LocalStrategy } from './local.strategy';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    PassportModule,\n    ConfigModule,\n    JwtModule.register({\n      secret: config().jwtKey,\n      signOptions: { expiresIn: '60s' },\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n","import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\n\ntype AuthUserProps = {\n  id: string;\n  email: string;\n  password: string;\n};\n@Injectable()\nexport class AuthService {\n  constructor(private jwtService: JwtService) {}\n\n  private readonly authUsers: AuthUserProps[] = [\n    {\n      id: '1',\n      email: 'geoff1012@gmail.com',\n      password: 'Password1!', // In prod this would be hashed using something like bcrypt or argon2\n    },\n  ];\n\n  async validateUser(\n    email: string,\n    password: string\n  ): Promise<AuthUserProps | false> {\n    // TODO: Here you would check the user details against a record in the db\n    const user = this.authUsers.find(\n      (user) => user.email === email && user.password === password\n    );\n\n    if (user) {\n      return user;\n    }\n    return false;\n  }\n\n  async login(user: AuthUserProps) {\n    const payload = { email: user.email, sub: user.id };\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n}\n","import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n","import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { config } from '../config/config';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: config().jwtKey,\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, email: payload.email };\n  }\n}\n","import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n","import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { UserLoginDto } from '@org/types';\nimport { Strategy } from 'passport-local';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({ usernameField: 'email' });\n  }\n\n  async validate(email: string, password: string): Promise<UserLoginDto> {\n    const user = await this.authService.validateUser(email, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user as UserLoginDto;\n  }\n}\n","import { ConfigFactory } from '@nestjs/config';\n\ntype Config = {\n  port: number;\n  jwtKey: string;\n  dbHost: string;\n  dbUser: string;\n  dbPort: number;\n  dbPassword: string;\n  dbName: string;\n};\n\n// defaults here for local development\nexport const config: ConfigFactory<Config> = () => ({\n  port: parseInt(process.env.PORT, 10) || 3333,\n  jwtKey: process.env.JWT_KEY || 'localSecretKey',\n  dbPort: parseInt(process.env.POSTGRES_PORT, 10) || 5432,\n  dbHost: process.env.POSTGRES_HOST || 'localhost',\n  dbUser: process.env.POSTGRES_USER || 'test',\n  dbPassword: process.env.POSTGRES_PASSWORD || 'test',\n  dbName: process.env.POSTGRES_DB || 'test',\n});\n","import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => {\n        return {\n          type: 'postgres',\n          host: configService.get('dbHost'),\n          port: configService.get('dbPort'),\n          username: configService.get('dbUser'),\n          password: configService.get('dbPassword'),\n          database: configService.get('dbName'),\n          synchronize: true,\n          autoLoadEntities: true,\n        };\n      },\n    }),\n  ],\n})\nexport class DatabaseModule {}\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { NestExpressApplication } from '@nestjs/platform-express';\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\nimport { AppModule } from './app/app.module';\nimport { config } from './config/config';\n\nasync function bootstrap() {\n  const app = await NestFactory.create<NestExpressApplication>(AppModule);\n  app.enableCors();\n\n  const swaggerOpts = new DocumentBuilder()\n    .setTitle('fullstack')\n    .setDescription('fullstack')\n    .setVersion('1.0')\n    .addTag('fullstack')\n    .build();\n\n  const document = SwaggerModule.createDocument(app, swaggerOpts);\n\n  SwaggerModule.setup('/swagger', app, document);\n\n  await app.listen(config().port, () => {\n    Logger.log('Listening on ' + config().port);\n  });\n}\n\nbootstrap();\n","import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class UserEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @Column()\n  firstName: string;\n  @Column()\n  lastName: string;\n  @Column()\n  email: string;\n  @Column()\n  phone: string;\n  @Column()\n  photo: string;\n}\n","import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Res,\n  UploadedFile,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { UserDto } from '@org/types';\nimport { diskStorage } from 'multer';\nimport { extname } from 'path';\nimport { UsersService } from './users.service';\n\nconst FILE_SIZE = 1000000 * 3; // in bytes;\nconst SUPPORTED_FORMATS = ['image/png', 'image/jpg', 'image/jpeg', 'image/gif'];\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly userService: UsersService) {}\n\n  @Get()\n  async getUsers() {\n    return this.userService.getUsers();\n  }\n\n  @Post()\n  @UseInterceptors(\n    FileInterceptor('photo', {\n      storage: diskStorage({\n        destination: 'uploads',\n        filename: (req, file, cb) => {\n          const randomName = Array(32)\n            .fill(null)\n            .map(() => Math.round(Math.random() * 16).toString(16))\n            .join('');\n          return cb(null, `${randomName}${extname(file.originalname)}`);\n        },\n      }),\n      limits: { fileSize: FILE_SIZE },\n      fileFilter: (req, file, cb) =>\n        cb(null, SUPPORTED_FORMATS.includes(file.mimetype)),\n    })\n  )\n  async createUser(@UploadedFile() file, @Body() user: Omit<UserDto, 'photo'>) {\n    // TODO: save all file info in asset record\n    return this.userService.createUser({ photo: file.filename, ...user });\n  }\n\n  @Get('photo/:imgId')\n  test(@Param('imgId') imgId, @Res() res) {\n    const imgPath = imgId;\n    return res.sendFile(imgPath, { root: 'uploads' });\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from './user.entity';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([UserEntity])],\n  providers: [UsersService],\n  controllers: [UsersController],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n","import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from '@org/types';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from './user.entity';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private usersRepository: Repository<User>\n  ) {}\n\n  async getUsers(): Promise<User[]> {\n    return this.usersRepository.find();\n  }\n\n  async createUser(user: User): Promise<User> {\n    const newUser = await this.usersRepository.create(user);\n    await this.usersRepository.save(newUser);\n    return newUser;\n  }\n}\n","export * from './lib/types';\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"@nestjs/platform-express\");","module.exports = require(\"@nestjs/serve-static\");","module.exports = require(\"@nestjs/swagger\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"lodash\");","module.exports = require(\"multer\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"passport-local\");","module.exports = require(\"path\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");"],"sourceRoot":""}