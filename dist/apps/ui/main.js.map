{"version":3,"sources":["./app/App.tsx","./app/components/Button/Button.tsx","./app/components/Error/Error.tsx","./app/components/Form/Error.tsx","./app/components/Form/Field.tsx","./app/components/Form/Label.tsx","./app/components/Form/index.tsx","./app/components/Loading/Loading.tsx","./app/components/Nav/Nav.tsx","./app/components/Nav/NavItem.tsx","./app/contexts/AuthenticatedContext.tsx","./app/contexts/SettingsContext.tsx","./app/pages/Home/Home.tsx","./app/pages/Login/Login.tsx","./app/pages/Users/CreateUser/CreateUser.tsx","./app/pages/Users/UserList/UserList.tsx","./app/pages/Users/Users.tsx","./config.ts","./helpers/localStorage.ts","./hooks/useCreateUser.ts","./hooks/useGetSettings.ts","./hooks/useLogin.ts","./hooks/useLogout.ts","./hooks/useUpdateSettings.ts","./hooks/useUsers.ts","./main.tsx"],"names":["App","name","path","HomePage","CreateUserPage","UsersPage","LoginPage","Button","props","Error","message","styled","div","Field","Label","label","Loading","Nav","routes","isAuthenticated","useAuthenticatedUser","logout","useLogout","map","route","AuthContainer","StyledButton","Navbar","nav","NavItem","NavLink","Ctx","createContext","AuthenticatedUserProvider","children","setValue","useState","setIsAuthenticated","useCallback","useEffect","token","getItem","ctx","useContext","SettingsProvider","settings","isLoading","hasErrored","setSettings","useGetSettings","useSettings","login","useLogin","formik","useFormik","initialValues","password","email","validationSchema","Yup","shape","required","matches","onSubmit","values","console","log","errors","handleSubmit","getFieldProps","touched","isValid","phoneRegExp","SUPPORTED_FORMATS","FILE_SIZE","postUser","useCreateUser","history","useHistory","firstName","lastName","phone","photo","min","max","test","value","size","type","includes","push","e","target","files","setFieldValue","setFieldTouched","dirty","StyledForm","form","UserList","users","columns","React","useMemo","Header","accessor","Cell","a","window","open","config","baseUrl","row","original","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useTable","data","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","cell","getCellProps","StyledTable","table","StyledCell","td","StyledRow","tr","useUsers","useUpdateSettings","updateSettings","updateSettingsHook","isUsersGridEnabled","isActive","handleUserGridToggle","Controls","process","HOST","environment","NODE_ENV","key","localStorage","setItem","setIsLoading","setHasErrored","formData","FormData","append","response","fetch","method","body","ok","fetchData","result","json","JSON","stringify","access_token","Authorization","status","updatedSettings","setUsers","ReactDOM","document","getElementById"],"mappings":"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","file":"main.js","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Nav } from './components/Nav/Nav';\nimport { AuthenticatedUserProvider } from './contexts/AuthenticatedContext';\nimport { SettingsProvider } from './contexts/SettingsContext';\nimport { HomePage } from './pages/Home/Home';\nimport { LoginPage } from './pages/Login/Login';\nimport { CreateUserPage } from './pages/Users/CreateUser/CreateUser';\nimport { UsersPage } from './pages/Users/Users';\n\nexport const App: React.FC<{}> = () => {\n  return (\n    <AuthenticatedUserProvider>\n      <SettingsProvider>\n        <Router>\n          <Nav\n            routes={[\n              { name: 'Home', path: '/' },\n              { name: 'Users', path: '/users' },\n            ]}\n          />\n          <Switch>\n            <Route path=\"/\" exact component={HomePage} />\n            <Route path=\"/users/create\" component={CreateUserPage} />\n            <Route path=\"/users\" component={UsersPage} />\n            <Route path=\"/login\" component={LoginPage} />\n          </Switch>\n        </Router>\n      </SettingsProvider>\n    </AuthenticatedUserProvider>\n  );\n};\n","import React from 'react';\n\ntype ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement> & {};\n\nexport const Button: React.FC<ButtonProps> = (props) => {\n  return <button {...props} />;\n};\n","import React from 'react';\n\ntype ErrorProps = {\n  message?: string;\n};\nexport const Error: React.FC<ErrorProps> = ({ message }) => {\n  return <p>{message || 'Something has gone wrong...'}</p>;\n};\n","import styled from 'styled-components';\n\nexport const Error = styled.div`\n  font-size: 12px;\n  color: #cd5c5c;\n  padding: 0.2rem;\n`;\n","import styled from 'styled-components';\n\nexport const Field = styled.div`\n  padding: 0.2rem;\n`;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: inline-block;\n  width: 150px;\n`;\n","export * from './Error';\nexport * from './Field';\nexport * from './Label';\n","import React from 'react';\n\ntype LoadingProps = {\n  message?: string;\n};\nexport const Loading: React.FC<LoadingProps> = ({ message }) => {\n  return <p>{message || 'Loading...'}</p>;\n};\n","import { useLogout } from 'apps/ui/src/hooks/useLogout';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useAuthenticatedUser } from '../../contexts/AuthenticatedContext';\nimport { Button } from '../Button/Button';\nimport { NavItem } from './NavItem';\n\ntype Nav = {\n  routes: RouteItem[];\n};\n\ntype RouteItem = {\n  path: string;\n  name: string;\n};\n\nexport const Nav: React.FC<Nav> = ({ routes }) => {\n  const { isAuthenticated } = useAuthenticatedUser();\n  const [logout] = useLogout();\n\n  return (\n    <Navbar>\n      {routes.map((route) => {\n        return (\n          <NavItem key={route.path} to={route.path}>\n            {route.name}\n          </NavItem>\n        );\n      })}\n      <AuthContainer>\n        {!isAuthenticated && (\n          <NavItem key={'/login'} to={'/login'}>\n            <StyledButton>Login</StyledButton>\n          </NavItem>\n        )}\n        {isAuthenticated && (\n          <StyledButton onClick={logout}>Logout</StyledButton>\n        )}\n      </AuthContainer>\n    </Navbar>\n  );\n};\n\nconst AuthContainer = styled.div`\n  margin-left: auto;\n`;\n\nconst StyledButton = styled(Button)`\n  margin: 0.5rem;\n`;\n\nconst Navbar = styled.nav`\n  background: whiteSmoke;\n  display: flex;\n  height: 60px;\n  width: '100%';\n  align-items: center;\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NavItem = styled(NavLink)<{}>`\n  display: flex;\n  cursor: pointer;\n  background: light-grey;\n  &.active {\n    color: black;\n  }\n  padding: 0.4rem;\n`;\n","import {\n  createContext,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { getItem } from '../../helpers/localStorage';\n\nexport type AuthContext = {\n  isAuthenticated: boolean;\n  setIsAuthenticated: (value: boolean) => void;\n};\n\nconst Ctx = createContext<AuthContext>(null);\n\nexport const AuthenticatedUserProvider = ({\n  children,\n}: {\n  children: ReactNode;\n}) => {\n  const [{ isAuthenticated }, setValue] = useState<\n    Omit<AuthContext, 'setIsAuthenticated'>\n  >({\n    isAuthenticated: false,\n  });\n\n  const setIsAuthenticated = useCallback(\n    (isAuthenticated: boolean) => setValue({ isAuthenticated }),\n    []\n  );\n\n  useEffect(() => {\n    const token = getItem('access_token');\n    if (token !== 'null') setValue({ isAuthenticated: true });\n  }, []);\n\n  return (\n    <Ctx.Provider value={{ isAuthenticated, setIsAuthenticated }}>\n      {children}\n    </Ctx.Provider>\n  );\n};\n\nexport const useAuthenticatedUser = () => {\n  const ctx = useContext(Ctx);\n\n  if (!ctx)\n    throw new Error(\n      `No Provider. Ensure that the AuthenticatedUserProvider is rendered as a parent before using this hook.`\n    );\n\n  const { isAuthenticated, setIsAuthenticated } = ctx;\n\n  return {\n    isAuthenticated,\n    setIsAuthenticated,\n  };\n};\n","import { Settings } from '@org/types';\nimport { createContext, ReactNode, useContext } from 'react';\nimport { useGetSettings } from '../../hooks/useGetSettings';\nimport { Error as ErrorComponent } from '../components/Error/Error';\nimport { Loading } from '../components/Loading/Loading';\n\nexport type SettingsContext = {\n  settings: Settings;\n  setSettings: (settings: Settings) => void;\n  isLoading: boolean;\n  hasErrored: boolean;\n};\n\nconst Ctx = createContext<SettingsContext>(null);\n\nexport const SettingsProvider = ({ children }: { children: ReactNode }) => {\n  const { settings, isLoading, hasErrored, setSettings } = useGetSettings();\n\n  if (hasErrored) {\n    return <ErrorComponent />;\n  }\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  return (\n    <Ctx.Provider value={{ settings, setSettings, isLoading, hasErrored }}>\n      {children}\n    </Ctx.Provider>\n  );\n};\n\nexport const useSettings = () => {\n  const ctx = useContext(Ctx);\n\n  if (!ctx)\n    throw new Error(\n      `No Provider. Ensure that the SettingsProvider is rendered as a parent before using this hook.`\n    );\n\n  const { settings, setSettings, isLoading, hasErrored } = ctx;\n\n  return {\n    settings,\n    isLoading,\n    hasErrored,\n    setSettings,\n  };\n};\n","import React from 'react';\n\nexport const HomePage: React.FC<{}> = () => {\n  return (\n    <div>\n      <p>Welcome to the home page</p>\n    </div>\n  );\n};\n","import { useLogin } from 'apps/ui/src/hooks/useLogin';\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport * as Yup from 'yup';\nimport { Button } from '../../components/Button/Button';\nimport { Error, Field, Label } from '../../components/Form';\n\nexport const LoginPage: React.FC<{}> = () => {\n  const [login, isLoading, hasErrored] = useLogin();\n\n  const formik = useFormik({\n    initialValues: {\n      password: '',\n      email: '',\n    },\n    validationSchema: Yup.object().shape({\n      password: Yup.string()\n        .required('Required')\n        .matches(\n          /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n          'Must contain 8 characters, one uppercase, one lowercase, one number and one special character'\n        ),\n\n      email: Yup.string().email('Invalid email').required('Required'),\n    }),\n    onSubmit: (values) => login(values),\n  });\n\n  console.log(`formik.values`, formik.values);\n  console.log(`formik.errors`, formik.errors);\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <Field>\n        <Label htmlFor=\"email\">Email Address</Label>\n\n        <input id=\"email\" type=\"text\" {...formik.getFieldProps('email')} />\n\n        {formik.touched.email && formik.errors.email ? (\n          <Error>{formik.errors.email}</Error>\n        ) : null}\n      </Field>\n\n      <Field>\n        <Label htmlFor=\"password\">Password</Label>\n\n        <input\n          id=\"password\"\n          type=\"password\"\n          {...formik.getFieldProps('password')}\n        />\n\n        {formik.touched.password && formik.errors.password ? (\n          <Error>{formik.errors.password}</Error>\n        ) : null}\n      </Field>\n\n      {hasErrored ? <Error>Failed to login</Error> : null}\n\n      <Button type=\"submit\" disabled={!formik.isValid || isLoading}>\n        Submit\n      </Button>\n    </form>\n  );\n};\n","import { useCreateUser } from 'apps/ui/src/hooks/useCreateUser';\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport * as Yup from 'yup';\nimport { Button } from '../../../components/Button/Button';\nimport { Error, Field, Label } from '../../../components/Form';\n\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nconst SUPPORTED_FORMATS = ['image/png', 'image/jpg', 'image/jpeg', 'image/gif'];\nconst FILE_SIZE = 1000000 * 3; // in bytes;\n\nexport const CreateUserPage: React.FC<{}> = () => {\n  const [postUser, isLoading, hasErrored] = useCreateUser();\n  const history = useHistory();\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      phone: '',\n      email: '',\n      photo: null as File,\n    },\n    validationSchema: Yup.object().shape({\n      firstName: Yup.string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .required('Required'),\n      photo: Yup.mixed()\n        .required()\n        .test('fileSize', 'File Size is too large', (value) => {\n          return value?.size && value.size <= FILE_SIZE;\n        })\n        .test('fileType', 'Unsupported File Format', (value) => {\n          return value?.type && SUPPORTED_FORMATS.includes(value.type);\n        }),\n      lastName: Yup.string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .required('Required'),\n      email: Yup.string().email('Invalid email').required('Required'),\n      phone: Yup.string()\n        .matches(phoneRegExp, 'Phone number is not valid')\n        .required('Required'),\n    }),\n    onSubmit: async (values) => {\n      await postUser(values);\n      history.push('/users');\n    },\n  });\n\n  return (\n    <StyledForm onSubmit={formik.handleSubmit}>\n      <NavLink to=\"/users\">\n        <Button>Go back</Button>\n      </NavLink>\n      <Field>\n        <Label htmlFor=\"firstName\">First Name</Label>\n\n        <input\n          id=\"firstName\"\n          type=\"text\"\n          {...formik.getFieldProps('firstName')}\n        />\n        {formik.touched.firstName && formik.errors.firstName ? (\n          <Error>{formik.errors.firstName}</Error>\n        ) : null}\n      </Field>\n\n      <Field>\n        <Label htmlFor=\"lastName\">Last Name</Label>\n\n        <input\n          id=\"lastName\"\n          type=\"text\"\n          {...formik.getFieldProps('lastName')}\n        />\n\n        {formik.touched.lastName && formik.errors.lastName ? (\n          <Error>{formik.errors.lastName}</Error>\n        ) : null}\n      </Field>\n\n      <Field>\n        <Label htmlFor=\"phone\">Phone</Label>\n\n        <input id=\"phone\" type=\"text\" {...formik.getFieldProps('phone')} />\n\n        {formik.touched.phone && formik.errors.phone ? (\n          <Error>{formik.errors.phone}</Error>\n        ) : null}\n      </Field>\n\n      <Field>\n        <Label htmlFor=\"email\">Email Address</Label>\n\n        <input id=\"email\" type=\"text\" {...formik.getFieldProps('email')} />\n\n        {formik.touched.email && formik.errors.email ? (\n          <Error>{formik.errors.email}</Error>\n        ) : null}\n      </Field>\n\n      <Field>\n        <Label htmlFor=\"photo\">Photo</Label>\n\n        <input\n          id=\"photo\"\n          type=\"file\"\n          accept=\"image/*\"\n          name=\"photo\"\n          onChange={(e) => {\n            e?.target?.files?.[0] &&\n              formik.setFieldValue('photo', e.target.files[0]);\n            formik.setFieldTouched('photo');\n          }}\n        />\n        {formik.touched.photo && formik.errors.photo ? (\n          <Error>{formik.errors.photo}</Error>\n        ) : null}\n      </Field>\n\n      {hasErrored ? <Error>Failed to upload</Error> : null}\n\n      <Button\n        type=\"submit\"\n        disabled={!(formik.isValid && formik.dirty) || isLoading}\n      >\n        Submit\n      </Button>\n    </StyledForm>\n  );\n};\n\nconst StyledForm = styled.form`\n  padding: 0.5rem 0rem;\n`;\n","import { User } from '@org/types';\nimport { config } from 'apps/ui/src/config';\nimport React from 'react';\nimport { useTable } from 'react-table';\nimport styled from 'styled-components';\nimport { Button } from '../../../components/Button/Button';\n\ntype UserListProps = {\n  users: User[];\n};\n\nexport const UserList: React.FC<UserListProps> = ({ users }) => {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'First Name',\n        accessor: 'firstName',\n      },\n      {\n        Header: 'Last Name',\n        accessor: 'lastName',\n      },\n      {\n        Header: 'Email',\n        accessor: 'email',\n      },\n      {\n        Header: 'Phone',\n        accessor: 'phone',\n      },\n      {\n        Header: 'Actions',\n        Cell: (a) => {\n          return (\n            <Button\n              onClick={() =>\n                window.open(\n                  `${config.baseUrl}/users/photo/${a.row.original.photo}`,\n                  '_blank'\n                )\n              }\n            >\n              View photo\n            </Button>\n          );\n        },\n      },\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data: users });\n\n  return (\n    <StyledTable {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <StyledCell {...column.getHeaderProps()}>\n                {column.render('Header')}\n              </StyledCell>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <StyledRow {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return (\n                  <StyledCell {...cell.getCellProps()}>\n                    {cell.render('Cell')}\n                  </StyledCell>\n                );\n              })}\n            </StyledRow>\n          );\n        })}\n      </tbody>\n    </StyledTable>\n  );\n};\n\nconst StyledTable = styled.table`\n  border-spacing: 0;\n  border: 1px solid black;\n`;\n\nconst StyledCell = styled.td`\n  margin: 0;\n  padding: 0.5rem;\n  border-bottom: 1px solid black;\n  border-right: 1px solid black;\n\n  :last-child {\n    border-right: 0;\n  }\n`;\n\nconst StyledRow = styled.tr`\n  :last-child {\n    td {\n      border-bottom: 0;\n    }\n  }\n`;\n","import { useUpdateSettings } from 'apps/ui/src/hooks/useUpdateSettings';\nimport { useUsers } from 'apps/ui/src/hooks/useUsers';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Button } from '../../components/Button/Button';\nimport { Error } from '../../components/Error/Error';\nimport { Loading } from '../../components/Loading/Loading';\nimport { useAuthenticatedUser } from '../../contexts/AuthenticatedContext';\nimport { useSettings } from '../../contexts/SettingsContext';\nimport { UserList } from './UserList/UserList';\n\nexport const UsersPage: React.FC<{}> = () => {\n  const { users, isLoading, hasErrored } = useUsers();\n  const { isAuthenticated } = useAuthenticatedUser();\n  const { settings } = useSettings();\n  const { updateSettings, ...updateSettingsHook } = useUpdateSettings();\n\n  if (hasErrored || updateSettingsHook.hasErrored) {\n    return <Error />;\n  }\n\n  if (isLoading || updateSettingsHook.isLoading) {\n    return <Loading />;\n  }\n\n  const isUsersGridEnabled = settings?.users?.isActive;\n\n  const handleUserGridToggle = () =>\n    updateSettings({\n      ...settings,\n      users: { ...settings.users, isActive: !settings.users.isActive },\n    });\n\n  return (\n    <div>\n      <Controls>\n        <Link to=\"/users/create\">\n          <Button>Create user</Button>\n        </Link>\n        <Button disabled={!isAuthenticated} onClick={handleUserGridToggle}>\n          {`${isUsersGridEnabled ? 'Disable' : 'Enable'} users grid`}\n        </Button>\n      </Controls>\n\n      {isUsersGridEnabled ? (\n        <UserList users={users} />\n      ) : (\n        <p>Users grid is disabled</p>\n      )}\n    </div>\n  );\n};\n\nconst Controls = styled.div`\n  padding: 1rem 0rem;\n`;\n","type Config = {\n  baseUrl: string;\n  environment: string;\n};\n\nexport const config: Config = {\n  baseUrl: process.env.HOST || 'http://localhost:3333',\n  environment: process.env.NODE_ENV,\n};\n","export const getItem = (key: string) => localStorage.getItem(key);\nexport const setItem = (key: string, value: string) =>\n  localStorage.setItem(key, value);\n","import { UserDto } from '@org/types';\nimport { useState } from 'react';\nimport { config } from '../config';\n\nexport const useCreateUser = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasErrored, setHasErrored] = useState(false);\n\n  const postUser = async (data: UserDto) => {\n    setIsLoading(true);\n    setHasErrored(false);\n\n    let formData = new FormData();\n    formData.append('photo', data.photo, data.photo.name);\n    formData.append('firstName', data.firstName);\n    formData.append('lastName', data.lastName);\n    formData.append('phone', data.phone);\n    formData.append('email', data.email);\n\n    const response = await fetch(`${config.baseUrl}/users`, {\n      method: 'POST',\n      body: formData,\n    });\n\n    if (!response.ok) {\n      setHasErrored(true);\n    }\n    setIsLoading(false);\n  };\n\n  return [postUser, isLoading, hasErrored] as const;\n};\n","import { Settings } from '@org/types';\nimport { useEffect, useState } from 'react';\nimport { config } from '../config';\n\nexport const useGetSettings = () => {\n  const [settings, setSettings] = useState<Settings>();\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasErrored, setHasErrored] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      const response = await fetch(`${config.baseUrl}/settings`);\n      const result = await response.json();\n      if (response.ok) {\n        setSettings(result);\n      } else {\n        setHasErrored(true);\n      }\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, [setSettings, setIsLoading, setHasErrored]);\n  return { settings, setSettings, isLoading, hasErrored };\n};\n","import { UserLoginDto } from '@org/types';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useAuthenticatedUser } from '../app/contexts/AuthenticatedContext';\nimport { config } from '../config';\nimport { setItem } from '../helpers/localStorage';\n\nexport const useLogin = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasErrored, setHasErrored] = useState(false);\n  const { setIsAuthenticated } = useAuthenticatedUser();\n  const history = useHistory();\n\n  const login = async (data: UserLoginDto) => {\n    setIsLoading(true);\n    setHasErrored(false);\n\n    const response = await fetch(`${config.baseUrl}/auth/login`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    const body = await response.json();\n\n    if (!response.ok) {\n      setHasErrored(true);\n    } else {\n      setItem('access_token', body.access_token);\n      setIsAuthenticated(true);\n      history.push('/');\n    }\n    setIsLoading(false);\n  };\n\n  return [login, isLoading, hasErrored] as const;\n};\n","import { useHistory } from 'react-router-dom';\nimport { useAuthenticatedUser } from '../app/contexts/AuthenticatedContext';\nimport { setItem } from '../helpers/localStorage';\n\nexport const useLogout = () => {\n  const { setIsAuthenticated } = useAuthenticatedUser();\n  const history = useHistory();\n\n  const logout = () => {\n    setItem('access_token', null);\n    setIsAuthenticated(false);\n    history.push('/');\n  };\n\n  return [logout] as const;\n};\n","import { Settings } from '@org/types';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSettings } from '../app/contexts/SettingsContext';\nimport { config } from '../config';\nimport { getItem } from '../helpers/localStorage';\n\nexport const useUpdateSettings = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasErrored, setHasErrored] = useState(false);\n  const { setSettings } = useSettings();\n  const history = useHistory();\n\n  const updateSettings = async (data: Settings) => {\n    setIsLoading(true);\n    setHasErrored(false);\n\n    const response = await fetch(`${config.baseUrl}/settings`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + getItem('access_token'),\n      },\n    });\n\n    console.log(`response`, response);\n\n    if (response.status === 401) {\n      // token expired - redirect to login - refresh / sessions token not implemented\n      history.push('/login');\n    }\n\n    if (!response.ok) {\n      setHasErrored(true);\n    } else {\n      const updatedSettings = await response.json();\n      console.log(`updatedSettings`, updatedSettings);\n      // update local cache of settings with settings returned from api\n      setSettings(updatedSettings);\n    }\n\n    setIsLoading(false);\n  };\n\n  return { updateSettings, isLoading, hasErrored };\n};\n","import { User } from '@org/types';\nimport { useEffect, useState } from 'react';\nimport { config } from '../config';\n\nexport const useUsers = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasErrored, setHasErrored] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      const response = await fetch(`${config.baseUrl}/users`);\n      const result = await response.json();\n      if (response.ok) {\n        setUsers(result);\n      } else {\n        setHasErrored(true);\n      }\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, [setUsers, setIsLoading]);\n  return { users, isLoading, hasErrored };\n};\n","import { StrictMode } from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { App } from './app/App';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":"webpack:///"}